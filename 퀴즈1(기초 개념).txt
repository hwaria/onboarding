1. 자바 사용이유?
- C 언어와 차이?
자바는 객체지향 언어인 반면에  c는 순차지향적이다. 
c는 저급언어(사용자가 쓰기엔 어렵지만 기계어에 더 가깝다)인 반면에 자바는 고급언어다 
c는 운영체제에 따라 맞춰서 코딩을 해줘야 하지만 자바는 jvm(자바가상머신)을 통해 동일한 코드를 어떤 운영체제에서든 사용할 수 있다
- 웹프로그래밍에 자바가 선호되는 이유?
다양한 환경에서 사용할 수 있어 확장성이 좋음
웹개발 프로젝트 진행시 참고할 만한 자료나 알고리즘도 많고 관련 인원 확충, 협업이 유리.

2. 자바 설치시 보는 부분
- JDK, JRE, JVM의 차이와 정의?
JDK(Java Development Kit): 자바 개발을 위한 도구(Kit), 자바 컴파일러(javac), 자바가상머신(jvm) 등 자바 개발에 필요한 각종 자바 라이브러리 등을 포함. JDK는 JRE와 JVM을 포함 
JRE(Java Run Environment): 자바 실행 환경으로 Jvm을 구현. 자바 개발이 아닌 파일 실행을 목적으로 함. jvm이 실행에 필요한 라이브러리를 포함.
JVM(Java Virtual Machine): 자바 바이트 코드를 해당 컴퓨터의 명령어로 해석해주는 역할을 하는 인터프리터로 자바를 운영체제에 제약없이 사용할 수 있도록 해줌. 
- 컴파일이란?(그 반대의 개념은?)
소스파일을 자바 바이트 코드(java byte code, *.class)로 변환 후 해당 컴퓨터의 기계어로 번역하여 실행하는 것.
디컴파일

3. 변수
- 변수의 초기화란? (실제 예시를 써도 됨)
변수를 선언해서 메모리 공간을 할당받고, 그 곳에 값을 지정해주는 것 
ex) int intType = 100;

- 오버플로우란?
자료 표현 범위를 벗어나는 데이터가 저장이 되어 범위 중 최소값부터 값이 순환되어 표현되는 현상 

4. 자료형
- 기본형과 참조형에 대해 나열하고 각각에 대하여 간략히 설명
기본형: 기본적으로 자바에서 제공하는 기본 자료형 boolean(1byte, true, false), char(2 byte), 정수 타입 byte(1 byte, -128 ~ 127), short(2 byte, -32,768 ~ 32.767), int(4 byte, -21억 ~ 21억), long(8 byte), 실수 타입 float(4 byte), double( 8 byte)
참조형: 다른 자료형들을 엮어서 만든 것. 클래스형(String,,), 인터페이스형, 배열형이 있음.


5. 연산자
- 3항연산을 이용하여 다음을 표현하여 보시오.
X = 3;
Y = 5; 
일 때, X가 Y보다 작으면 참, 아니면 거짓
X > Y ? -> True.
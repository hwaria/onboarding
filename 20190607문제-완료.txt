1. 4장 (16 ~19 강) 예제 실습 하면서 학습
2. 25강 26강 27강 예제 실습 하면서 학습
3. 하위 3개 테이블 생성

TABLE명: DEVELOPER_NAME 
FIELD	TYPE		NULL	KEY
no		int(11)	 	NO		PK			
name	varchar(20)	YES			

create table DEVELOPER_NAME (
no integer(11) not null, name varchar(20), 
primary key(no)
);
		
TABLE명: DEVELOPER_ADDRESS
FIELD	TYPE		NULL	KEY
no		int(11)	 	NO		PK			
address	varchar(40)	YES			

create table DEVELOPER_ADDRESS ( 
no integer(11) not null,
address varchar(40),
primary key(no)
)

TABLE명: DEVELOPER_POSITION

FIELD		TYPE			NULL	KEY
no			int(11)	 		NO		PK			
position	varchar(40)		YES		

create table DEVELOPER_POSITION ( 
no integer(11) not null,
position varchar(40),
primary key(no)
)

4. 
DEVELOPER_NAME 테이블에 
NO:1 NAME:문승진
NO:2 NAME:이창준
NO:3 NAME:변자룡
NO:4 NAME:이정화

Insert into DEVELOPER_NAME values (1, '문승진'), (2, '이창준'), (3, '변자룡'), (4, '이정화');

DEVELOPER_ADDRESS 테이블에 
NO:1 address: 서울 
NO:2 address: 대전 
NO:3 address: 대구 
NO:4 address: 부산 

INSERT INTO DEVELOPER_ADDRESS VALUES (1, '서울'), (2, '대전'), (3, '대구'), (4, '부산');

DEVELOPER_POSITION 테이블에 
NO:1 position: 과장 
NO:2 position: 대리 
NO:3 position: 사원 
NO:4 position: 사원 

INSERT INTO DEVELOPER_POSITION VALUES (1, '과장'), (2, '대리'), (3, '사원'), (4, '사원');

데이터 추가 

5. DEVELOPER_NAME , DEVELOPER_ADDRESS 2개 테이블을 이용해 NO, NAME , ADDRESS 출력

select DEVELOPER_NAME.NO, DEVELOPER_NAME.NAME, DEVELOPER_ADDRESS.ADDRESS 

from DEVELOPER_NAME INNER JOIN DEVELOPER_ADDRESS 
	
on DEVELOPER_NAME.NO = DEVELOPER_ADDRESS.NO;


6. DEVELOPER_NAME , DEVELOPER_POSITION 2개 테이블을 이용해 NO, NAME , POSITION 출력

SELECT DEVELOPER_NAME.NO, DEVELOPER_NAME.NAME, DEVELOPER_POSITION.POSITION
FROM DEVELOPER_NAME INNER JOIN DEVELOPER_POSITION

ON DEVELOPER_NAME.NO = DEVELOPER_POSITION.NO;

7. DEVELOPER_NAME , DEVELOPER_ADDRESS , DEVELOPER_POSITION 3개 테이블을 이용해 NO, NAME , ADDRESS ,POSITION 출력

SELECT DEVELOPER_NAME.NO, DEVELOPER_NAME.NAME, DEVELOPER_ADDRESS.ADDRESS, DEVELOPER_POSITION.POSITION
FROM DEVELOPER_NAME, DEVELOPER_POSITION, DEVELOPER_ADDRESS

WHERE DEVELOPER_NAME.NO = DEVELOPER_POSITION.NO AND DEVELOPER_NAME.NO = DEVELOPER_ADDRESS.NO;


8. DEVELOPER_ADDRESS 테이블에서 NO가 2인 데이터 삭제
DELETE FROM DEVELOPER_ADDRESS WHERE NO = 2;

9. DEVELOPER_POSITION 테이블에서 NO가 3인 데이터 삭제
DELETE FROM DEVELOPER_POSITION WHERE NO = 3;

10. DEVELOPER_NAME , DEVELOPER_ADDRESS 2개 테이블을 이용해 NO, NAME , ADDRESS 출력 (4명 전체 나오도록)  
select DEVELOPER_NAME.NO, DEVELOPER_NAME.NAME, DEVELOPER_ADDRESS.ADDRESS 

from DEVELOPER_NAME LEFT JOIN DEVELOPER_ADDRESS 	

on DEVELOPER_NAME.NO = DEVELOPER_ADDRESS.NO;

11. DEVELOPER_NAME , DEVELOPER_POSITION 2개 테이블을 이용해 NO, NAME , POSITION 출력 (4명 전체 나오도록)
select DEVELOPER_NAME.NO, DEVELOPER_NAME.NAME, DEVELOPER_POSITION.POSITION

from DEVELOPER_NAME LEFT JOIN DEVELOPER_POSITION 	

on DEVELOPER_NAME.NO = DEVELOPER_POSITION.NO;

12. DEVELOPER_NAME , DEVELOPER_ADDRESS , DEVELOPER_POSITION 3개 테이블을 이용해 NO, NAME , ADDRESS ,POSITION 출력 (4명 전체 나오도록)
select DEVELOPER_NAME.NO, DEVELOPER_NAME.NAME, DEVELOPER_ADDRESS.ADDRESS, DEVELOPER_POSITION.POSITION

from DEVELOPER_NAME LEFT JOIN DEVELOPER_POSITION ON (DEVELOPER_NAME.NO = DEVELOPER_POSITION.NO)

LEFT JOIN DEVELOPER_ADDRESS ON (DEVELOPER_NAME.NO = DEVELOPER_ADDRESS.NO);